import {Injectable} from '@angular/core';import {HttpClient} from '@angular/common/http';import {mergeMap, map} from 'rxjs/operators';import {BehaviorSubject, Observable} from 'rxjs';import User from '../Models/User';@Injectable({  providedIn: 'root',})export default class UserService {  private currentUserSubject: BehaviorSubject<User>;  public currentUser: Observable<User>;  constructor(private http: HttpClient) {    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));    this.currentUser = this.currentUserSubject.asObservable();  }  public get currentUserValue(): User {    return this.currentUserSubject.value;  }  login(email: string, password: string) {    return this.http.get('/api/sanctum/csrf-cookie')      .pipe(        mergeMap(() => this.http.post('/api/login', { email, password })),        map((user: User) => {          localStorage.setItem('currentUser', JSON.stringify(user));          this.currentUserSubject.next(user);          return user;        })      )  }  logout() {    return this.http.post('/api/logout', {})      .pipe(        map(() => {          console.log('ere');          localStorage.removeItem('currentUser');          this.currentUserSubject.next(null);        })      )  }  register(data) {    return this.http.post('/api/register', data);  }  getUser() {    return this.http.get('/api/me');  }}